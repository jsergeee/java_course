//Данный код соответствует принципу разделения интерфейса (ISP), так как интерфейс `UserView<T>` содержит только один метод `sendOnConsole`, который отвечает только за вывод списка пользователей на консоль. Это позволяет иметь различные реализации этого интерфейса для разных типов пользователей (студентов и учителей) и не реализовывать неиспользуемые методы.
//Принцип инверсии зависимостей (DIP) также применен, так как классы, которые будут использовать этот интерфейс, будут зависеть только от абстрактного типа данных (`UserView<T>`) в своих полях и методах, а не от конкретных реализаций. Это позволяет легко заменять реализацию интерфейса `UserView<T>` на другую, не меняя код классов, которые используют этот интерфейс.

package OOP.Home_Work.Task_6.View;

import OOP.Home_Work.Task_6.Model.User;

import java.util.List;

public interface UserView<T extends User>{
    void sendOnConsole(List<T> list);
}
