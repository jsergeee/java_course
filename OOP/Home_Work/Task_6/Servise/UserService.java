//Данный код соответствует принципу разделения интерфейса (ISP), так как интерфейс `UserService<T>` содержит только необходимые методы для работы со списком пользователей (студентов и учителей). Это позволяет реализовывать только нужные методы в классах, которые используют этот интерфейс, и не реализовывать неиспользуемые методы.
//Принцип инверсии зависимостей (DIP) также применен, так как классы, которые будут использовать этот интерфейс, будут зависеть только от абстрактного типа данных (`UserService<T>`) в своих полях и методах, а не от конкретных реализаций. Это позволяет легко заменять реализацию интерфейса `UserService<T>` на другую, не меняя код классов, которые используют этот интерфейс.


package OOP.Home_Work.Task_6.Servise;

import java.time.LocalDate;
import java.util.List;

public interface UserService<T> {
    List<T> getAll();
    void create(String firstName, String secondName, String patronymic, LocalDate dateOfBirth);
}
